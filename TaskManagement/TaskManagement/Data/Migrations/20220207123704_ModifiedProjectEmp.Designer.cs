// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskManagement.Managing.Contexts;

namespace TaskManagement.Data.Migrations
{
    [DbContext(typeof(ManagingContext))]
    [Migration("20220207123704_ModifiedProjectEmp")]
    partial class ModifiedProjectEmp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaskManagement.Managing.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mobile")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("NationalId")
                        .HasColumnType("int");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TaskPerformedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaskPerformedId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("TaskManagement.Managing.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EstimatedClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("ProjectManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("TaskManagement.Managing.Entities.ProjectEmp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectRole")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectEmp");
                });

            modelBuilder.Entity("TaskManagement.Managing.Entities.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompleteStatus")
                        .HasColumnType("int");

                    b.Property<string>("Dependancy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ECHour")
                        .HasColumnType("float");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskManagement.Managing.Entities.TaskEmp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskEmp");
                });

            modelBuilder.Entity("TaskManagement.Managing.Entities.TaskPerformed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompletePCT")
                        .HasColumnType("int");

                    b.Property<int>("HoursConsumed")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskEmpId")
                        .HasColumnType("int");

                    b.Property<DateTime>("WorkDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TaskEmpId");

                    b.ToTable("TaskPerformed");
                });

            modelBuilder.Entity("TaskManagement.Managing.Entities.Employee", b =>
                {
                    b.HasOne("TaskManagement.Managing.Entities.TaskPerformed", "TaskPerformed")
                        .WithMany()
                        .HasForeignKey("TaskPerformedId");

                    b.Navigation("TaskPerformed");
                });

            modelBuilder.Entity("TaskManagement.Managing.Entities.Project", b =>
                {
                    b.HasOne("TaskManagement.Managing.Entities.Employee", "Employee")
                        .WithMany("Project")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TaskManagement.Managing.Entities.ProjectEmp", b =>
                {
                    b.HasOne("TaskManagement.Managing.Entities.Employee", "Employee")
                        .WithMany("ProjectEmp")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskManagement.Managing.Entities.Project", "Project")
                        .WithMany("ProjectEmp")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("TaskManagement.Managing.Entities.Task", b =>
                {
                    b.HasOne("TaskManagement.Managing.Entities.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("TaskManagement.Managing.Entities.TaskEmp", b =>
                {
                    b.HasOne("TaskManagement.Managing.Entities.Employee", "Employee")
                        .WithMany("TaskEmp")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskManagement.Managing.Entities.Task", "Tasks")
                        .WithMany("TaskEmp")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("TaskManagement.Managing.Entities.TaskPerformed", b =>
                {
                    b.HasOne("TaskManagement.Managing.Entities.TaskEmp", "TaskEmp")
                        .WithMany("TaskPerformed")
                        .HasForeignKey("TaskEmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskEmp");
                });

            modelBuilder.Entity("TaskManagement.Managing.Entities.Employee", b =>
                {
                    b.Navigation("Project");

                    b.Navigation("ProjectEmp");

                    b.Navigation("TaskEmp");
                });

            modelBuilder.Entity("TaskManagement.Managing.Entities.Project", b =>
                {
                    b.Navigation("ProjectEmp");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("TaskManagement.Managing.Entities.Task", b =>
                {
                    b.Navigation("TaskEmp");
                });

            modelBuilder.Entity("TaskManagement.Managing.Entities.TaskEmp", b =>
                {
                    b.Navigation("TaskPerformed");
                });
#pragma warning restore 612, 618
        }
    }
}
